---
- name: Setup Elasticsearch
  shell: |
    wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.15.1-linux-x86_64.tar.gz
    wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.15.1-linux-x86_64.tar.gz.sha512
    shasum -a 512 -c elasticsearch-7.15.1-linux-x86_64.tar.gz.sha512 
    tar -xzf elasticsearch-7.15.1-linux-x86_64.tar.gz
    cd elasticsearch-7.15.1/ 
  args:
    creates: /home/{{ remote_user }}/elasticsearch-7.15.1
  become: no

- name: Deploy configuration for master server
  template:
    src: "elastic-master-conf.j2"
    dest: "{{ elasticsearch_config_path }}"
  when: "'master' in group_names"

- name: Deploy configuration for node1 server
  template:
    src: "elastic-node1-conf.j2"
    dest: "{{ elasticsearch_config_path }}"
  when: "'node1' in group_names"

- name: Deploy configuration for node2 server
  template:
    src: "elastic-node2-conf.j2"
    dest: "{{ elasticsearch_config_path }}"
  when: "'node2' in group_names"

    
- name: create service for elasticsearch
  template: 
    src: "elastic-service.j2"
    dest: "/etc/systemd/system/elastic.service"
  become: yes

- name: Reload systemd elastic
  systemd:
    daemon_reload: yes
  become: yes

- name: Set max_map_count sysctl value
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present  
    sysctl_set: yes  
  become: yes  

- name: start elastic for master
  systemd:
    name: elastic.service
    state: started
    enabled: yes
  when: "'master' in group_names"
  become: yes

- name: load for master
  pause:
    seconds: 60

- name: start elastic for node
  systemd:
    name: elastic.service
    state: started
    enabled: yes
  when: "'node1' in group_names"
  become: yes

- name: start elastic for node
  systemd:
    name: elastic.service
    state: started
    enabled: yes
  when: "'node2' in group_names"
  become: yes


- name: Setup Kibana
  shell: | 
    curl -O https://artifacts.elastic.co/downloads/kibana/kibana-7.15.1-linux-x86_64.tar.gz
    curl https://artifacts.elastic.co/downloads/kibana/kibana-7.15.1-linux-x86_64.tar.gz.sha512 | shasum -a 512 -c - 
    tar -xzf kibana-7.15.1-linux-x86_64.tar.gz
    cd kibana-7.15.1-linux-x86_64/
  args:
    creates: /home/{{ remote_user }}/kibana-7.15.1-linux-x86_64
  when: "'node2' in group_names"
  become: no
    
- name: Deploy configuration for kibana
  template:
    src:  "kibana-conf.j2"
    dest: "{{ kibana_config_path }}"
  when: "'node2' in group_names"

- name: create service for kibana
  template:
    src: "kibana-service.j2"
    dest: "/etc/systemd/system/kibana.service"
  when: "'node2' in group_names"
  become: yes

- name: Reload systemd kibana
  systemd:
    daemon_reload: yes
  when: "'node2' in group_names"
  become: yes

- name: Check kibana service status
  systemd:
    name: kibana.service
    state: started
    enabled: yes
  when: "'node2' in group_names"
  become: yes
